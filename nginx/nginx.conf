worker_processes 1;

events { worker_connections 1024; }

http {

    sendfile on;

    gzip              on;
    gzip_http_version 1.0;
    gzip_proxied      any;
    gzip_min_length   500;
    gzip_disable      "MSIE [1-6]\.";
    gzip_types        text/plain text/xml text/css
                      text/comma-separated-values
                      text/javascript
                      application/x-javascript
                      application/atom+xml;

    # List of application servers
    # Use below section to run multiple backend servers and Load balance using Nginx
    upstream backend {
        # uncomment below to support multiple uwsgi backend server
        # More info here: https://flask-socketio.readthedocs.io/en/latest/#uwsgi-web-server
        # ip_hash;
        server flask_demo:5000;
        # to scale the app, just add more nodes here!
    }

    # Configuration for the server
    server {
          listen 80;
          server_name localhost;
        # Enable below line to have https connection
        # listen 443 ssl;
        # ssl_certificate /etc/nginx/cert.pem ;
        # ssl_certificate_key /etc/nginx/key.pem;

      location / {
          root   /usr/share/nginx/html;
          index  index.html;
          expires -1;
          add_header Pragma "no-cache";
          add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
          try_files $uri$args $uri$args/ $uri $uri/ /index.html =404;
      }

      location /api {
            proxy_pass          http://backend;
            proxy_set_header        Host $host;
      }

      location /socket.io {
            proxy_pass          http://backend/socket.io;
            # enable WebSockets
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection "upgrade";
            proxy_set_header        Host $host;
      }
      # To allow POST on static pages
      error_page  405     =200 $uri;
	}
}
